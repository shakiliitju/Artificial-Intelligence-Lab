# -*- coding: utf-8 -*-
"""04-Numpy Exercises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R4LoIOs6OrvtbVwQhhOX6_ynyJN_YKbB

___

<a href='https://classroom.google.com/u/1/c/NTIwMDQwNDk2OTUw'> <img src='../Ai_lab.jpg' /></a>
___

# NumPy Exercises

Now that we've learned about NumPy let's test your knowledge. We'll start off with a few simple tasks, and then you'll be asked some more complicated questions.

#### Import NumPy as np
"""

import numpy as np

"""#### Create an array of 10 zeros"""

np.zeros(10)

"""#### Create an array of 10 ones"""

np.ones(10)

"""#### Create an array of 10 fives"""

np.ones(10) * 5

"""#### Create an array of the integers from 10 to 50"""

np.arange(10,51)

"""#### Create an array of all the even integers from 10 to 50"""

print(np.arange(10,51,2))

"""#### Create a 3x3 matrix with values ranging from 0 to 8"""

np.arange(0,9).reshape((3,3))

"""#### Create a 3x3 identity matrix"""

np.eye(3)

"""#### Use NumPy to generate a random number between 0 and 1"""

np.random.randint(0,1)

"""#### Use NumPy to generate an array of 25 random numbers sampled from a standard normal distribution"""

rand_num = np.random.normal(0,1,25)
print("array")
print(rand_num)

"""#### Create the following matrix:"""

np.linspace(0,1,20)

"""#### Create an array of 20 linearly spaced points between 0 and 1:"""

num_line = np.linspace(0,1,20)
print(num_line)

"""## Numpy Indexing and Selection

Now you will be given a few matrices, and be asked to replicate the resulting matrix outputs:
"""

mat = np.arange(1,26).reshape(5,5)
mat

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

mat[2: ,1:]

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

mat[3,4]

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

mat[0:3,1:2]

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

mat[4]

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

mat[3:]

"""### Now do the following

#### Get the sum of all the values in mat
"""

mat.sum()

"""#### Get the standard deviation of the values in mat"""

mat.std()

"""#### Get the sum of all the columns in mat"""

mat.sum(axis=1)

"""# Great Job!"""